<?php

namespace AppBundle\Repository;

use Doctrine\DBAL\Query\QueryBuilder;
use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    /** use */
    public function getBySearchTN($tags,$name){
        $query = $this->createQueryBuilder('a')
            ->where('a.id IN (:tags)')
            ->setParameter(':tags', $tags)
            ->orWhere('a.name LIKE :search')
            ->setParameter(':search', '%'.$name.'%')
            ->getQuery()
            ->getResult();

        return $query;
    }

    /** use */
    public function getBySearchT($tags){
        $query = $this->createQueryBuilder('a')
            ->where('a.id IN (:tags)')
            ->setParameter(':tags', $tags)
            ->getQuery()
            ->getResult();

        return $query;
    }

    public function getNbArticleNoSearch(){
        $query = $this->createQueryBuilder('a')
            ->select('count(a)')
            ->getQuery()
            ->getSingleResult();
        return $query;
    }

    /** use */
    public function getLastFive(){
        $query = $this->createQueryBuilder('a')
            ->orderBy('a.id','DESC')
            ->setMaxResults(5)
            ->getQuery()
            ->getResult();
        return $query;
    }

    public function getNbArticleWithSearch($search){
        $query = $this->createQueryBuilder('a')
            ->select('count(a)')
            ->leftJoin('a.category','c')
            ->leftJoin('a.tags','t')
            ->where('c.name LIKE :search' )
            ->orWhere('t.name LIKE :search')
            ->setParameter(':search', $search)
            ->getQuery()
            ->getSingleResult();
        return $query;
    }
}
